{"version":3,"sources":["Helpers/GetPokemon.js","Helpers/GetAbilities.js","Helpers/GetMoves.js","Helpers/GetStats.js","Helpers/GetType.js","components/MostrarHabilidad.js","components/MostrarMovimientos.js","components/MostrarStatus.js","components/MostrarTipos.js","components/findPokemon.js","components/Footer.js","components/putPokemon.js","Pokedex.js","index.js"],"names":["GetPokemon","pokemon","a","url","fetch","respuesta","json","data","name","sprites","nombreImagen","nombre","imagen","front_default","alert","GetAbilities","abilities","habilidades","map","hab","ability","GetMoves","moves","movimientos","move","GetStats","stats","status","stat","base","base_stat","GetType","types","tipos","tipo","id","slot","tipe","type","MostrarHabilidad","className","MostrarMovimientos","MostrarStatus","MostrarTipos","FindPokemon","useState","informacion","setInformacion","Tipo","setTipo","Status","setStatus","Habilidades","setHabilidades","Movimientos","setMovimientos","useEffect","then","src","alt","index","Footer","href","PutPokemon","setPokemon","ingresarPokemon","setIngresarPokemon","onSubmit","e","preventDefault","trim","length","placeholder","value","onChange","target","Pokedex","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3be5772d.chunk.js","sourcesContent":["export const GetPokemon = async ( pokemon ) =>{\n    try {\n    const url = `https://pokeapi.co/api/v2/pokemon/${ pokemon }`;\n    const respuesta = await fetch( url );\n    const  data  = await respuesta.json();\n    \n    const { name = [], sprites = [] } = data;\n    \n    \n    const nombreImagen =  {\n        nombre: name,\n        imagen: sprites.front_default   ,\n        \n    }  \n   \n            return nombreImagen;\n\n }\n    catch(error){\n        alert('Pokemon no existente');\n    }\n\n\n\n}\n\n","export const GetAbilities = async ( pokemon ) =>{\n\n\n    const url = `https://pokeapi.co/api/v2/pokemon/${ pokemon }`;\n    const respuesta = await fetch( url );\n    const  { abilities = [] }  = await respuesta.json();\n\n    \n\n    const habilidades =   abilities.map( hab =>{\n            \n            return {\n                    nombre: hab.ability.name\n            }   \n      });\n\n     \n\n    return habilidades;\n}","\n\nconst GetMoves = async( pokemon ) => {\n    \n    const url = `https://pokeapi.co/api/v2/pokemon/${ pokemon }`;\n    const respuesta = await fetch( url );\n    const  { moves = [] }  = await respuesta.json();\n\n    \n\n    const movimientos =   moves.map( move =>{\n            \n            return {\n                    nombre: move.move.name\n            }   \n      });\n\nreturn movimientos;\n\n\n}\n\nexport default GetMoves\n","export const GetStats = async ( pokemon ) =>{\n\n\n    const url = `https://pokeapi.co/api/v2/pokemon/${ pokemon }`;\n    const respuesta = await fetch( url );\n    const  { stats = [] }  = await respuesta.json();\n\n    \n\n    const status =   stats.map( stat =>{\n            \n            return {\n                    base: stat.base_stat,\n                    nombre: stat.stat.name\n            }   \n      });\n\n     \n\n    return status;\n}","export const GetType = async ( pokemon ) =>{\n\n\n        const url = `https://pokeapi.co/api/v2/pokemon/${ pokemon }`;\n        const respuesta = await fetch( url );\n        const  { types = [] }  = await respuesta.json();\n\n        const tipos =   types.map(tipo =>{\n                \n                return {\n                        id: tipo.slot,\n                        tipe: tipo.type.name,\n                        url: tipo.type.url\n                }   \n          });\n\n        \n        return tipos;\n}\n","import React from 'react'\n\nconst MostrarHabilidad = ({ nombre }) => {\n    return (\n        <div>\n           \n            <p className='elemento'>{ nombre }</p>\n        </div>\n    )\n}\n\nexport default MostrarHabilidad\n","import React from 'react'\n\nconst MostrarMovimientos = ({ nombre }) => {\n    return (\n        \n            <li className='elemento'>{ nombre }</li>\n\n    )\n}\n\nexport default MostrarMovimientos\n","import React from 'react'\n\nconst MostrarStatus = ({ base, nombre }) => {\n    return (\n        \n            <li className='elemento'>\n                { base }          { nombre }\n            </li>\n     \n          \n      \n    )\n}\n\nexport default MostrarStatus\n","import React from 'react'\nimport '../index.css';\n\nconst MostrarTipos = ({ tipe, url }) => {\n    return (\n        \n         <h2 className = { tipe }>             \n                { tipe }\n         </h2> \n        \n    )\n}\n\nexport default MostrarTipos\n","import React, { useEffect, useState } from 'react'\nimport { GetPokemon } from '../Helpers/GetPokemon';\nimport { GetAbilities } from '../Helpers/GetAbilities';\nimport GetMoves from '../Helpers/GetMoves';\nimport { GetStats } from '../Helpers/GetStats';\nimport { GetType } from '../Helpers/GetType';\nimport MostrarHabilidad from './MostrarHabilidad';\nimport MostrarMovimientos from './MostrarMovimientos';\nimport MostrarStatus from './MostrarStatus';\nimport MostrarTipos from './MostrarTipos';\n \nexport const FindPokemon = ({ pokemon }) => {\n   \n    const [informacion, setInformacion] = useState([])\n    const [Tipo, setTipo] = useState([])\n    const [Status, setStatus] = useState([])\n    const [Habilidades, setHabilidades] = useState([])\n    const [Movimientos, setMovimientos] = useState([]) \n\n\n    \n\n    useEffect(() => {\n             GetPokemon( pokemon )\n            .then( setInformacion ) \n            GetStats( pokemon )\n            .then( setStatus )\n            GetType( pokemon )\n            .then( setTipo )\n            GetAbilities( pokemon )\n            .then( setHabilidades)\n            GetMoves( pokemon )\n            .then( setMovimientos) \n    }, [pokemon]) \n\n    \n\n\n    const { nombre, imagen } = !!informacion && informacion;\n\n\n\n    return (     \n      <>  \n            <div className=\"fichaPokemon\">         \n                <section className=\"estadisticas_grid\">\n                    <div className=\"ficha query-block contenedor animate__animated animate__fadeIn\">\n                        <h1>{ nombre }</h1>\n                        <img \n                            className='imagen_pokemon'\n                            src={ imagen } \n                            alt={ nombre } \n                            />\n                            <div className = 'tipos'> \n                            \n                                {\n                                    Tipo.map ( tipo => (\n                                        \n                                        <MostrarTipos \n                                            key = { tipo.id }\n                                            { ...tipo }\n                                            />         \n                                    ) )\n                                }\n                            </div> \n                    </div>\n                    \n                   <div className = 'habilidades_y_stats animate__animated animate__fadeIn'> \n                    \n                    <div className = \"stats contenedor query-block\" >\n                        <h3>Estadisticas</h3>\n                        <ul>\n                            {\n                                Status.map ( (stat, index) => (\n                                    \n                                    <MostrarStatus \n                                    key = { index }\n                                        { ...stat }\n                                    />\n                                ) )                        \n                            }\n                        </ul>\n                    </div>\n                    \n                    <div className=\"habilidades query-block contenedor animate__animated animate__fadeIn\">\n                        <h3>Habilidades</h3>\n                            <ul>\n                                    {\n                                    \n                                    Habilidades.map ( (hab, index) => (\n                                        \n                                        <MostrarHabilidad \n                                            key = { index }\n                                            { ...hab }\n                                            />         \n                                        ) )\n                                    }\n                            </ul>\n                    </div>        \n                    </div> \n            </section>\n            \n\n                 <section className='movimientos query-block'>\n                    <h3>Movimientos</h3>\n                    <ul>                \n                        {\n                        \n                        Movimientos.map ( (move, index) => (\n                            \n                            <MostrarMovimientos \n                                key = { index }\n                                { ...move }\n                                />         \n                        ) )\n                        }\n                    </ul>       \n                </section> \n            </div>\n      \n     </>\n    )\n}\n","import React from 'react'\n\nconst Footer = () => {\n    return (\n        <footer className='footer'>\n          <section className='version'>\n            <h5 >\n              v1.0\n            </h5>\n          </section>\n          <section className='datos_autor'>\n            <h5>Desarrollado por M. Aguilar</h5>\n            <p>Mas proyectos en<a href='https://github.com/Misael-04?tab=repositories'><img src='/GitHub-Mark-Light-32px.png' alt='GitHub'/> </a></p>\n          </section>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React, { useState } from 'react'\n//import { GetPokemon } from '../Helpers/GetPokemon';\nimport { FindPokemon } from './findPokemon';\n\n\n\nconst PutPokemon = ({ pokemon, setPokemon }) => {\n    \n    const [ingresarPokemon, setIngresarPokemon] = useState('');     \n\n    const handlePokemon = (e)=>{\n        setIngresarPokemon(e.target.value);\n    }\n\n    const handleSubmit = (e)=>{\n        e.preventDefault();\n        if (ingresarPokemon.trim().length === 0) {\n            alert(\"incorrecto\");\n        } else {\n            setPokemon ( ingresarPokemon );    \n        }\n            setIngresarPokemon('');\n    }\n//Se agrego este onsubmit para tratar de no usar el useefect  usar un onsubmit clasico\n\n    const mostrarInfo = () => {\n        FindPokemon(pokemon);\n    }\n    \n    \n    return (\n        <form\n            className='Ingresar_Pokemon' \n            onSubmit={ handleSubmit }>\n            <input type=\"text\" \n                   placeholder = \"Ingresa el nombre o numero de tu Pokemon\"\n                   value={ ingresarPokemon }\n                   onChange={ handlePokemon } \n                   onSubmit={ mostrarInfo }\n          />\n        </form>\n    )\n}\n\nexport default PutPokemon\n\n","import React, { useState } from 'react'\nimport { FindPokemon } from './components/findPokemon';\nimport Footer from './components/Footer';\nimport PutPokemon from './components/putPokemon';\n\n\nexport const Pokedex = () => {\n\n    const [pokemon, setPokemon] = useState('');\n    \n    return (\n        <>\n            <section className='Contenedor_Global'>     \n            <header>\n                    <h1>Hola Mundo pokemon</h1>\n                    <PutPokemon \n                        setPokemon={ setPokemon }\n                        pokemon={ pokemon }\n                        />  \n                    \n                </header>\n            { pokemon.length>0 \n                    ? <FindPokemon pokemon={ pokemon }/> \n                    : <h2 className='aviso'>Ingresa el nombre o numero de tu pokemon favorito para obtener sus datos basicos</h2>\n                }\n                \n                </section>\n            <Footer />\n       </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Pokedex } from './Pokedex';\n\n\nReactDOM.render(\n  \n   <Pokedex />,\n    \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}